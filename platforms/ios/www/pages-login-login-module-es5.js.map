{"version":3,"sources":["src/app/pages/login/login.html","src/app/pages/login/login-routing.module.ts","src/app/pages/login/login.css","src/app/pages/login/login.module.ts","src/app/pages/login/login.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<!-- <ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n  \\n\\n    <ion-title>Login</ion-title>\\n  </ion-toolbar>\\n</ion-header> -->\\n\\n<ion-content>\\n  <div class=\\\"login-logo\\\">\\n    <img src=\\\"assets/img/appicon.png\\\" alt=\\\"Ionic logo\\\">\\n  </div>\\n\\n  <form #loginForm=\\\"ngForm\\\" novalidate>\\n    <ion-list>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\" color=\\\"dark\\\">Username</ion-label>\\n        <ion-input [(ngModel)]=\\\"login.username\\\" name=\\\"emailID\\\" type=\\\"text\\\" #emailID=\\\"ngModel\\\" spellcheck=\\\"false\\\" autocapitalize=\\\"off\\\"\\n          required>\\n        </ion-input>\\n      </ion-item>\\n\\n      <ion-text color=\\\"danger\\\">\\n        <p [hidden]=\\\"emailID.valid || submitted == false\\\" class=\\\"ion-padding-start\\\">\\n          Username is required\\n        </p>\\n      </ion-text>\\n\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\" color=\\\"dark\\\">Password</ion-label>\\n        <ion-input [(ngModel)]=\\\"login.password\\\" name=\\\"password\\\" type=\\\"password\\\" #password=\\\"ngModel\\\" required>\\n        </ion-input>\\n      </ion-item>\\n\\n      <ion-text color=\\\"danger\\\">\\n        <p [hidden]=\\\"password.valid || submitted == false\\\" class=\\\"ion-padding-start\\\">\\n          Password is required\\n        </p>\\n      </ion-text>\\n    </ion-list>\\n    <ion-text color=\\\"danger\\\">\\n      <p *ngIf=\\\"wrongpassword\\\" class=\\\"ion-padding-start\\\">\\n        Incorrect username/password.\\n      </p>\\n    </ion-text>\\n    <ion-row>\\n      <ion-col>\\n        <ion-button (click)=\\\"onLogin(loginForm)\\\" type=\\\"submit\\\" expand=\\\"block\\\" style=\\\"--background:#61968D\\\">Login</ion-button>\\n      </ion-col>\\n      <!-- <ion-col>\\n        <ion-button (click)=\\\"onSignup()\\\" color=\\\"light\\\" expand=\\\"block\\\">Signup</ion-button>\\n      </ion-col> -->\\n    </ion-row>\\n  </form>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LoginPage } from './login';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginPageRoutingModule { }\n","export default \".login-logo {\\n  padding: 20px 0;\\n  min-height: 200px;\\n  text-align: center;\\n}\\n\\n.login-logo img {\\n  max-width: 150px;\\n}\\n\\n.list {\\n  margin-bottom: 0;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4uY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9sb2dpbi9sb2dpbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4tbG9nbyB7XG4gIHBhZGRpbmc6IDIwcHggMDtcbiAgbWluLWhlaWdodDogMjAwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmxvZ2luLWxvZ28gaW1nIHtcbiAgbWF4LXdpZHRoOiAxNTBweDtcbn1cblxuLmxpc3Qge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuIl19 */\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login';\nimport { LoginPageRoutingModule } from './login-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [\n    LoginPage,\n  ]\n})\nexport class LoginModule { }\n","import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApiService } from \"../../service/api.service\";\nimport { StorageServiceService } from \"../../service/storage-service.service\";\nimport { UserData } from '../../providers/user-data';\nimport { UserOptions } from '../../interfaces/user-options';\nimport { invalid } from '@angular/compiler/src/render3/view/util';\ndeclare const $, Swal;\n\n\n\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n  styleUrls: ['./login.css'],\n})\nexport class LoginPage {\n  login: any = {}\n  wrongpassword = false\n  // login: UserOptions = { username: '', password: '' };\n  submitted = false;\n\n  constructor(\n    public userData: UserData,\n    public router: Router,\n    public api: ApiService,\n    public storage: StorageServiceService,\n  ) { }\n\n  onLogin(form: NgForm) {\n    this.submitted = true;\n    if (form.valid) {\n\n      this.api.loginPost(this.login).then((res: any) => {\n        console.log(res)\n        if(res && res.token){\n          let loginData = {\n            emailID: res.user_email,\n            password: this.login.password,\n            name: res.user_nicename\n          }\n          this.api.login(loginData).then((res) => {\n            console.log(this.login)\n            if (res.status == 'success') {\n              this.storage.setData({ token: res.token, userType: res.userType })\n              this.router.navigateByUrl('/app/tabs/dashboard');\n            } else {\n              console.log(\"failuer\")\n              if (res.status === 'failure') {\n                this.wrongpassword = true\n              }\n            }\n          })\n            .catch(err => {\n              console.log(err)\n            })\n        }\n        else{\n          alert('invalid user login')\n        }\n        \n\n      }).catch(err => {\n        console.log(err)\n        alert('invalid user login')\n      })\n\n\n    }\n  }\n\n  onSignup() {\n    this.router.navigateByUrl('/signup');\n  }\n}\n"],"sourceRoot":"webpack:///","file":"pages-login-login-module-es5.js"}